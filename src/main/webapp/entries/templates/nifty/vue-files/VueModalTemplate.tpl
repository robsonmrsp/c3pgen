<!-- ${entity.name}´s modal generated by JSetup ${JSetupVersion} :  at ${.now}  -->
<template>
<div >
	<div id="groupInputContainer" class="form-group">
		<label class="control-label" for="inputDisplay">Nome</label>
		<div id="groupInput" class="input-group">
			<input id="inputDisplay" readonly type="text" class="form-control append-left" v-model="value[displayValue]" />
			<div class="input-group-addon append-right " @click="openModal=true">
				<span class="fa fa-search"></span>
			</div>
		</div>
	</div>

	<modal v-model="openModal" title="Pesquisa de ${firstUpper(entity.displayName)}" auto-focus size="lg">
		<div class="pane">
			<div class="panelody">
				<div id="messages_div"></div>
				<form id="formModal${firstUpper(entity.name)}Filter">
						<div class="panel" >
			<#list entity.attributes as att>
				<#if att.viewApproach?? >
					<#if att.viewApproach.type  == 'datepicker'>	
							<div class="form-group">
								<label class="control-label" for="${firstLower(att.name)}">${firstUpper(att.displayName)!firstLower(att.name)}</label>
								<div class="input-group">
									<date-picker v-mask="'datetime'" v-model="datatableConfig.filterParameters.${firstLower(att.name)}" :config="{format: '${att.dateFormat}',useCurrent: false}"></date-picker>
									<div class="input-group-addon	append-right">
										<span class="fa fa-calendar"></span>
									</div>
								</div>
							</div>
					<#else>	
							<div class="form-group">
								<label class="control-label" for="${firstLower(att.name)}">${firstUpper(att.displayName)!firstUpper(att.name)}</label>
								<input type="text" name='${firstLower(att.name)}'  v-model="datatableConfig.filterParameters.${firstLower(att.name)}" class="form-control" >
							</div>
					</#if>
		  	   <#else>
		  	   </#if>
			</#list> 
						</div>
				</form>
				<div class="center">
					<div class="">
						<div class="">
							<i v-if="!datatableConfig.loading" class="fa fa-align-justify"></i>
							<i v-if="datatableConfig.loading" class="fa fa-spinner fa-spin fa-fw"></i>
							Resultado da pesquisa
						</div>
						<table class="table table-striped table-bordered table-hover  no-footer  ">
							<thead>
							<tr>
						<#list entity.attributes as att>
								<th class="th-${firstLower(att.name)}}}">
									<a >
										<i class="fa "></i>
										${firstUpper(att.displayName)!firstLower(att.name)}
									</a>
								</th>
						</#list> 
						<#list entity.relationships as rel >
							<#if rel.showInPages && rel.viewApproach?? && rel.viewApproach.type == 'modal'  || rel.viewApproach.type == 'combo'>
								<th class="th-${firstLower(rel.name)}}}">
									<a >
										<i class="fa "></i>
										${firstUpper(rel.displayName)!firstUpper(rel.name)}
									</a>
								</th>
							</#if>
						</#list>
							</tr>
						</thead>
							<tbody>
							<tr v-for="${firstLower(entity.name)} in datatableConfig.items " :key="${firstLower(entity.name)}.id">
						<#list entity.attributes as att>									
								<td>{{${firstLower(entity.name)}.${firstLower(att.name)}}}</td>
						</#list> 
						<#list entity.relationships as rel >
							<#if rel.showInPages && rel.viewApproach?? && rel.viewApproach.type == 'modal'  || rel.viewApproach.type == 'combo'>
								<#if rel.viewApproach.type == 'modal'>
								<td>{{${firstLower(entity.name)}.${rel.name}.${rel.viewApproach.textField} }}</td>
								<#elseif rel.viewApproach.type == 'combo'>
								<td>{{${firstLower(entity.name)}.${rel.name}.${rel.viewApproach.comboVal} }}</td>										
								</#if>
							</#if>
						</#list>
							</tr>
						</tbody>
						</table>
					</div>
					<div class="">
						<div class="col-md-6" style="text-align: left; margin: 15px 0">
							<div class=" float-left ">
								<span v-if="datatableConfig.loading" class="loading-elements">
									<span class="">
										<i v-if="datatableConfig.loading" class="fa fa-spinner fa-spin fa-fw"></i>
										Carregando...
									</span>
								</span>
								<span v-if="!datatableConfig.loading" class="has-elements" style="display: inline;">
									Registros
									<span class="initial-page">{{datatableConfig.first}}</span>
									a
									<span class="final-page">{{datatableConfig.last}}</span>
									de
									<span class="total-records">{{datatableConfig.totalRecords}}</span>
									. Exibindo até
									<select class="combo-page-size" v-on:change="paginate()" v-model="datatableConfig.pageSize"  style="padding: 0 0 0 0; height: 20px">
										<option value="3">3</option>
										<option value="5">5</option>
										<option value="10" >10</option>
										<option value="25">25</option>
										<option value="50">50</option>
									</select>
									por página.
								</span>
							</div>
						</div>
						<div class="">
						    <pagination v-model="datatableConfig.page" v-on:change="paginate" :total-page="datatableConfig.totalPages" align="right" />
						</div>
					</div>
				</div>
			</div>
		</div>
	</modal>
</div>
</template>
<script>
import DatatableConfig from "@/components/core/DatatableConfig";
import HttpRequest from "@/components/core/HttpRequest";

export default {
  props: {
    value: {
      type: Object,
      default: function() {
        return {};
      }
    },
    displayValue: {
      type: String,
      default: ""
    }
  },

  created: function() {
    this.service = new HttpRequest("/rs/crud/${firstLower(entity.name)}s");
  },

  mounted: function() {
    this.paginate();
  },

  data: function() {
    return {
      openModal: false,
      datatableConfig: new DatatableConfig()
    };
  },

  methods: {
   // implementar o onSelect
    reset: function() {
      this.datatableConfig = new DatatableConfig();
    },

    paginate: function(pageIndex = 1) {
      this.datatableConfig.page = pageIndex;

      this.service.getPage(
        this.datatableConfig,
        data => {
          console.debug("success fetching ${firstLower(entity.name)}´s modal page", data);
        },

        error => {
          console.error("error fetching ${firstLower(entity.name)}´s modal page", error);
        }
      );
    }
  }
};
</script> 
