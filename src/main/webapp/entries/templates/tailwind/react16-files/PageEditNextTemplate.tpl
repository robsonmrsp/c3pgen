/* ${entity.name}Â´s edit page generated by JSetup ${JSetupVersion} :  at ${.now}  */
import React from "react";
import { dehydrate } from "@tanstack/query-core";

import Form${firstUpper(entity.name)} from "@/page-sessions/${firstLower(entity.name)}/Form${firstUpper(entity.name)}";
import getQueryClient from "@/contexts/react-query/getQueryClient";
import HydrateClient from "@/contexts/react-query/HydrateClient";
import HttpRequest from "@/lib/HttpRequest";

const httpRequest = new HttpRequest("/api/crud/${firstLower(entity.name)}s");

const get${firstUpper(entity.name)} = async (id) => {
  const res = await httpRequest.getById(id);
  const ${firstLower(entity.name)} = await res.data;
  return ${firstLower(entity.name)};
};

const ${firstUpper(entity.name)}Page = async ({ params }) => {
  const { id } = params;

  const queryClient = getQueryClient();
  await queryClient.prefetchQuery(["hydrate-${firstLower(entity.name)}-id", { id: +id }], async () =>
    get${firstUpper(entity.name)}(id)
  );
  const dehydratedState = dehydrate(queryClient);

  return (
    <HydrateClient state={dehydratedState}>
      <Form${firstUpper(entity.name)} ${firstLower(entity.name)}Id={id} />
    </HydrateClient>
  );
};

export default ${firstUpper(entity.name)}Page;
