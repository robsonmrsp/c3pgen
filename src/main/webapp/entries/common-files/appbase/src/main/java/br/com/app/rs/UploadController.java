package ${application.corePackage}.rs;


import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;

import javax.imageio.ImageIO;
import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import ${application.corePackage}.json.JsonError;
import ${application.corePackage}.utils.ImageUtils;
import ${application.corePackage}.utils.Util;

/* generated by JSetup ${JSetupVersion} :  at ${.now} */
@RestController
@RequestMapping("/rs/crud/uploads/")
@SuppressWarnings({ "unchecked", "rawtypes" })
public class UploadController {

	public static final Logger LOGGER = Logger.getLogger(UploadController.class);

	private static final int THUMBNAIL_WIDTH = 240;

	@RequestMapping(value = "file", headers = ("content-type=multipart/*"), method = RequestMethod.POST, consumes = MediaType.MULTIPART_FORM_DATA_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity upload(@RequestPart("file") MultipartFile file, HttpServletRequest httpServletRequest) {
		DataUpload dataUpload = null;
		String uploadFolder = httpServletRequest.getServletContext().getRealPath("/uploads");

		String nameFile = "";
		try {
			InputStream stream = file.getInputStream();

			String contentType = file.getContentType();
			nameFile = System.currentTimeMillis() + "_" + Util.removeNonUnicodeCharAndSpaces(file.getOriginalFilename());
			String folder = uploadFolder + File.separator;
			ByteArrayOutputStream bos = null;
			if (contentType != null) {
				if (contentType.toLowerCase().contains("image")) {
					BufferedImage image = ImageIO.read(stream);

					ImageUtils.createThumbnail(image, THUMBNAIL_WIDTH, contentType, folder, nameFile);
					ImageUtils.saveImage(image, contentType, folder, nameFile);
				} else {
					bos = new ByteArrayOutputStream();
					int read = 0;
					byte[] bytes = new byte[1024];
					while ((read = stream.read(bytes)) != -1) {
						bos.write(bytes);
					}
					FileOutputStream fileOutputStream = new FileOutputStream(new File(folder + nameFile));
					fileOutputStream.write(bos.toByteArray());
					fileOutputStream.close();
					bos.close();
				}
				dataUpload = new DataUpload(contentType, "uploads/" + nameFile);
			}
			stream.close();
		} catch (Exception e) {
			return new ResponseEntity(new JsonError("Problema durante upload da m√≠dia [ " + nameFile + " ] error [" + e.getMessage() + "]", nameFile), HttpStatus.INTERNAL_SERVER_ERROR);
		}
		return new ResponseEntity(dataUpload, HttpStatus.OK);
	}
}

