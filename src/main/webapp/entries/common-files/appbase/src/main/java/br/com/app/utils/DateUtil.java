package ${application.corePackage}.utils;

import org.apache.log4j.Logger;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/* generated by JSetup ${JSetupVersion} :  at ${.now} */
public class DateUtil {
	private static final Logger LOGGER = Logger.getLogger(DateUtil.class);

	public static final DateTimeFormatter DATE_TIME_FORMAT = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
	public static final DateTimeFormatter DATE_FORMAT = DateTimeFormatter.ofPattern("dd/MM/yyyy");
	public static final DateTimeFormatter HOUR_FORMAT = DateTimeFormatter.ofPattern("HH:mm");

	public static String asString(LocalDateTime datetime, String pattern) {
		return DateTimeFormatter.ofPattern(pattern).format(datetime);
	}

	public static String localDateAsString(LocalDate date) {
		String format = "";
		try {
			format = date.format(DATE_FORMAT);

		} catch (Exception e) {
			format = null;
		}
		return format;
	}

	public static String localDateTimeAsString(LocalDateTime date) {
		String format = "";
		try {
			format = date.format(DATE_TIME_FORMAT);
		} catch (Exception e) {
			format = null;
		}
		return format;
	}

	public static LocalDateTime stringAsLocalDateTime(String date) {
		if (date != null && !date.isEmpty()) {
			try {
				LocalDateTime dateTime = LocalDateTime.parse(date, DATE_TIME_FORMAT);
				return dateTime;
			} catch (Exception e) {
				LOGGER.error(e);
			}
		}
		return null;

	}

	public static LocalDate stringAsLocalDate(String date) {
		if (date != null && !date.isEmpty()) {
			try {
				LocalDate dateTime = LocalDate.parse(date, DATE_FORMAT);
				return dateTime;
			} catch (Exception e) {
				LOGGER.error(e);
			}
		}
		return null;

	}
}
