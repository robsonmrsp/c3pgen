/* generated by JSetup ${JSetupVersion} :  at ${.now} */
package ${package}.model.filter;

import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;

import java.io.Serial;
import java.io.Serializable;

import java.time.LocalDate;
import java.time.LocalDateTime;

@Data
@Builder
@EqualsAndHashCode
@AllArgsConstructor
@NoArgsConstructor
public class Filter${entity.name} implements Serializable {
    @Serial
	private static final long serialVersionUID = 1L;
	<#if entity.attributes??>	
	<#list entity.attributes as att>
		<#if att.name != 'id'>
		<#if dataType(att.type.className) ==  "LocalDateTime" >
	<#--  @JsonSerialize(using = CustomLocalDateTimeSerializer.class) -->
	<#--  @JsonDeserialize(using = CustomLocalDateTimeDeserializer.class) -->
	private ${dataType(att.type.className)} ${att.name};
		<#elseif  dataType(att.type.className) ==  "LocalDate" >
	<#--  @JsonSerialize(using = CustomLocalDateSerializer.class) -->
	<#--  @JsonDeserialize(using = CustomLocalDateDeserializer.class)-->		
	private ${dataType(att.type.className)} ${att.name};  			
		<#else>
	private ${dataType(att.type.className)} ${att.name};  			
		</#if>  
		</#if>
	</#list>
	</#if>

	<#if entity.relationships??>	
	<#list entity.relationships as rel>
		<#if rel.type == 'OneToMany'>
		<#elseif rel.type == 'ManyToOne'>
	private Integer ${firstLower(rel.name)!firstLower(rel.model)};		
		<#elseif rel.type == 'ManyToMany'>
		<#elseif rel.type == 'OneToOne'>
		</#if>
	</#list>
	</#if>
}
//generated by JSetup ${JSetupVersion} :  at ${.now}