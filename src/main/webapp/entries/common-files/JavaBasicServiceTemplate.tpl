package ${package}.service;

import java.util.List;
import java.time.LocalDateTime;
import java.time.LocalDate;
<#if application.multitenancy?? && application.multitenancy>
import ${application.corePackage}.model.Owner;
</#if>
import ${application.rootPackage}.model.${entity.name};
import ${application.rootPackage}.model.filter.Filter${entity.name};

import ${application.corePackage}.persistence.pagination.Pager;
import ${application.corePackage}.persistence.pagination.PaginationParams;
/* generated by JSetup ${JSetupVersion} :  at ${.now} */

public interface ${entity.name}Service {

	${entity.name} get(Integer id);

	List<${entity.name}> search(String searchText);
	
<#if application.multitenancy?? &&  application.multitenancy>
	${entity.name} get(Integer id, Owner owner);

	List<${entity.name}> all(Owner owner);
	
	List<${entity.name}> filter(Filter${entity.name} filter${entity.name}, Owner owner, Boolean equals);
	
	List<${entity.name}> filter(PaginationParams<Filter${entity.name}> paginationParams, Owner owner, Boolean equals);
	
	List<${entity.name}> filter(PaginationParams<Filter${entity.name}> paginationParams, Owner owner);
	
	Pager<${entity.name}> all(PaginationParams<Filter${entity.name}> paginationParams, Owner owner);
<#else>
	List<${entity.name}> all();
	
	Pager<${entity.name}> all(PaginationParams<Filter${entity.name}> paginationParams);

	List<${entity.name}> filter(Filter${entity.name} filter${entity.name}, Boolean equals);
	
	List<${entity.name}> filter(PaginationParams<Filter${entity.name}> paginationParams, Boolean equals);
</#if>

	${entity.name} save(${entity.name} entity);

	${entity.name} update(${entity.name} entity);

	Boolean delete(Integer id);
			
}
//generated by JSetup ${JSetupVersion} :  at ${.now}