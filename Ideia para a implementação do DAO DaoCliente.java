package br.com.locadora.persistence;

import javax.inject.Named;

import org.apache.log4j.Logger;
import org.hibernate.Criteria;
import org.hibernate.criterion.MatchMode;
import org.hibernate.criterion.Restrictions;

import br.com.locadora.core.persistence.AccessibleHibernateDao;
import br.com.locadora.model.Cliente;
import br.com.locadora.model.filter.FilterCliente;

/* generated by JSetup v0.95 :  at 07/09/2017 22:00:40 */
@Named
@SuppressWarnings("rawtypes")
public class DaoCliente extends AccessibleHibernateDao<FilterCliente, Cliente> {
	private static final Logger LOGGER = Logger.getLogger(DaoCliente.class);

	public DaoCliente() {
		super(Cliente.class);
	}

	public Cliente findByCpf(String cpf) {
		Cliente cliente = null;
		try {
			cliente = (Cliente) criteria().add(Restrictions.eq("cpf", cpf)).uniqueResult();
		} catch (Exception e) {
			LOGGER.error("Erro ao obter Cliente pelo cpf," + cpf, e);
		}
		return cliente;
	}

	protected Criteria prepareIlikeCriteria(FilterCliente filterCliente) {
		Criteria criteria = criteria();
		if (filterCliente.getNome() != null) {
			criteria.add(Restrictions.ilike("nome", filterCliente.getNome(), MatchMode.ANYWHERE));
		}
		if (filterCliente.getCpf() != null) {
			criteria.add(Restrictions.ilike("cpf", filterCliente.getCpf(), MatchMode.ANYWHERE));
		}
		if (filterCliente.getTelefone() != null) {
			criteria.add(Restrictions.ilike("telefone", filterCliente.getTelefone(), MatchMode.ANYWHERE));
		}
		if (filterCliente.getDataNascimento() != null) {
			criteria.add(Restrictions.eq("dataNascimento", filterCliente.getDataNascimento()));
		}
		if (filterCliente.getEndereco() != null) {
			criteria.createAlias("endereco", "endereco_");
			criteria.add(Restrictions.eq("endereco_.id", filterCliente.getEndereco()));
		}
		return criteria;
	}

	protected Criteria prepareEquCriteria(FilterCliente filterCliente) {
		Criteria criteria = criteria();
		if (filterCliente.getNome() != null) {
			criteria.add(Restrictions.eq("nome", filterCliente.getNome()));
		}
		if (filterCliente.getCpf() != null) {
			criteria.add(Restrictions.eq("cpf", filterCliente.getCpf()));
		}
		if (filterCliente.getTelefone() != null) {
			criteria.add(Restrictions.eq("telefone", filterCliente.getTelefone()));
		}
		if (filterCliente.getDataNascimento() != null) {
			criteria.add(Restrictions.eq("dataNascimento", filterCliente.getDataNascimento()));
		}
		if (filterCliente.getEndereco() != null) {
			criteria.createAlias("endereco", "endereco_");
			criteria.add(Restrictions.eq("endereco_.id", filterCliente.getEndereco()));
		}
		return criteria;
	}

}

// generated by JSetup v0.95 : at 07/09/2017 22:00:40